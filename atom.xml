<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一只阿布啾</title>
  
  <subtitle>Welcome to Boring Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://boringsnail.github.io/"/>
  <updated>2019-11-20T07:23:30.312Z</updated>
  <id>https://boringsnail.github.io/</id>
  
  <author>
    <name>boringsnail</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git 手册</title>
    <link href="https://boringsnail.github.io/2019/11/20/git-%E6%89%8B%E5%86%8C/"/>
    <id>https://boringsnail.github.io/2019/11/20/git-%E6%89%8B%E5%86%8C/</id>
    <published>2019-11-20T07:16:35.000Z</published>
    <updated>2019-11-20T07:23:30.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="git-强行pull并覆盖本地的一切"><a href="#git-强行pull并覆盖本地的一切" class="headerlink" title="git - 强行pull并覆盖本地的一切"></a>git - 强行pull并覆盖本地的一切</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin master</span><br><span class="line">git reset --hard FETCH_HEAD</span><br><span class="line">git clean -df</span><br></pre></td></tr></table></figure><blockquote><p>fetch origin master是拉取远端的提交。<br>然后reset –hard FETCH_HEAD就是把当前分支重置到刚刚拉取下来的远端的头。任何修改都以远端为准。<br>最后可能会残留一些本地新建的文件，所以再用clean -df清除所有本地的不相关的文件和文件夹，一切就OK了。</p></blockquote><h2 id="git-回滚单个文件"><a href="#git-回滚单个文件" class="headerlink" title="git 回滚单个文件"></a>git 回滚单个文件</h2><ol><li>cd 到需要回滚代码的目录下（eg：回滚代码文件为main.py）</li><li>执行<code>git log main.py</code>  执行后会看到<br><img src="evernotecid://216F89DB-28B4-424D-862C-D183D3A7E3B8/appyinxiangcom/16534076/ENResource/p2261" alt="9c61b6e607d935813f41325804b10717.png"></li><li>git checkout b1ae1eb19fd026c61b3fa9167ba2d66b34f76015 main_handle.py</li><li>提交代码并push</li></ol><h2 id="使用git-stash命令保存和恢复进度"><a href="#使用git-stash命令保存和恢复进度" class="headerlink" title="使用git stash命令保存和恢复进度"></a>使用git stash命令保存和恢复进度</h2><h3 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h3><p>保存当前工作进度，会把暂存区和工作区的改动保存起来。执行完这个命令后，在运行git status命令，就会发现当前是一个干净的工作区，没有任何改动。使用git stash save ‘message…’可以添加一些注释</p><h3 id="git-stash-list"><a href="#git-stash-list" class="headerlink" title="git stash list"></a>git stash list</h3><p>显示保存进度的列表。也就意味着，git stash命令可以多次执行。</p><h3 id="git-stash-pop-–index-stash-id"><a href="#git-stash-pop-–index-stash-id" class="headerlink" title="git stash pop [–index] [stash_id]"></a>git stash pop [–index] [stash_id]</h3><ul><li><code>git stash pop</code> 恢复最新的进度到工作区。git默认会把工作区和暂存区的改动都恢复到工作区。</li><li><code>git stash pop --index</code> 恢复最新的进度到工作区和暂存区。（尝试将原来暂存区的改动还恢复到暂存区）</li><li><code>git stash pop stash@{1}</code>恢复指定的进度到工作区。stash_id是通过<code>git stash list</code>命令得到的<br>通过<code>git stash pop</code>命令恢复进度后，会删除当前进度。<h3 id="git-stash-apply-–index-stash-id"><a href="#git-stash-apply-–index-stash-id" class="headerlink" title="git stash apply [–index] [stash_id]"></a>git stash apply [–index] [stash_id]</h3>除了不删除恢复的进度之外，其余和git stash pop 命令一样。</li></ul><h3 id="git-stash-drop-stash-id"><a href="#git-stash-drop-stash-id" class="headerlink" title="git stash drop [stash_id]"></a>git stash drop [stash_id]</h3><p>删除一个存储的进度。如果不指定stash_id，则默认删除最新的存储进度。</p><h3 id="git-stash-clear"><a href="#git-stash-clear" class="headerlink" title="git stash clear"></a>git stash clear</h3><p>删除所有存储的进度。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git&quot;&gt;&lt;a href=&quot;#Git&quot; class=&quot;headerlink&quot; title=&quot;Git&quot;&gt;&lt;/a&gt;Git&lt;/h1&gt;&lt;h2 id=&quot;git-强行pull并覆盖本地的一切&quot;&gt;&lt;a href=&quot;#git-强行pull并覆盖本地的一切&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="git学习" scheme="https://boringsnail.github.io/categories/git%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="git学习" scheme="https://boringsnail.github.io/tags/git%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://boringsnail.github.io/2019/11/15/hello-world/"/>
    <id>https://boringsnail.github.io/2019/11/15/hello-world/</id>
    <published>2019-11-15T12:12:12.672Z</published>
    <updated>2019-11-15T12:12:12.672Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
